<!-- Build file (as inspiration) for INF5110/INF9110 Obligatory exercise -->
<project name="Compila theodokt" default="menu" basedir=".">
	<target name="menu" >
		<echo>Targets                             </echo>
		<echo>clean                     - Cleans up the project</echo>
		<echo>build                     - Build compiler</echo>
		<echo>run                       - Run compiler</echo>
        <echo>test-passing              - Test compiler parsing passes</echo>
        <echo>test-fail                 - Test compiler parsing fails</echo>
	</target>

	<!-- Path definitions -->
	<path id="path-cup">
		<pathelement location="./lib/java-cup-11a.jar"/>
		<pathelement location="./lib/jflex-full-1.7.0.jar"/>
	</path>

	<path id="path-run">
		<path refid="path-cup"/>
		<pathelement location="build/classes" />
	</path>

	<!-- Task definitions -->
	<taskdef classname="jflex.anttask.JFlexTask" name="jflex" classpathref="path-cup" />
	<taskdef classname="java_cup.anttask.CUPTask" name="cup" classpathref="path-cup"/>

	<!-- Target definitions -->
	<target name="init">
		<!-- Directories and files that exist. -->
		<property name="dir.base" value="${basedir}"/>
		<property name="dir.build" value="${dir.base}/build"/>
		<property name="dir.src-gen" value="${dir.base}/src-gen"/>
		<property name="dir.src" value="${dir.base}/src"/>
		<property name="dir.desc" value="${dir.base}/desc"/>

		<!-- Directories and files to be created. -->
		<property name="dir.classes" value="${dir.build}/classes"/>
	</target>

	<target name="clean" depends="init">
		<delete includeemptydirs="true">
			<fileset dir="${dir.build}" includes="**/*"/>
		</delete>
		<delete includeemptydirs="true">
			<fileset dir="${dir.src-gen}" includes="**/*"/>
		</delete>
	</target>

	<target name="mkdir" depends="init">
		<mkdir dir="${dir.classes}"/>
	</target>        

	<!-- Generate scanner and parser using JFlex and CUP  -->
	<target name="generate" depends="mkdir">
		<jflex file="./src/cuplex/compila.lex" destdir="src-gen"/>
		<cup srcfile="./src/cuplex/compila.cup" destdir="src-gen" interface="true" />
        <!-- <cup srcfile="./src/cuplex/compila-nonambiguous.cup" destdir="src-gen" interface="true" /> -->
	</target>

	<!-- Compile Java Files and store in /build/classes directory  -->
	<target name="compile" depends="generate">
		<javac srcdir="${dir.src}" destdir="${dir.classes}" debug="true" includes="**/*.java" classpathref="path-cup" sourcepath="${dir.src-gen}"/>
		<javac srcdir="${dir.src-gen}" destdir="${dir.classes}" debug="true" includes="**/*.java" classpathref="path-cup" sourcepath="${dir.src}" />
	</target>

	<!-- Compiler target  -->
	<target name="build" depends="compile"/>

	<!-- Run the system  -->
	<target name="run" depends="init">
		<java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/fullprograms/runme.cmp"/>
		</java>
	</target>
    
    <!-- Test the system -->
    <target name="test-passing" depends="init">
		<java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/noerrors/test1.cmp"/>
		</java>
		<java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/noerrors/test2.cmp"/>
		</java>
		<java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/noerrors/test3.cmp"/>
		</java>
		<java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/noerrors/test4.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/noerrors/test5.cmp"/>
		</java>
	</target>

    <!-- Tests that will fail -->
    <target name="test-fail" depends="init">
		<java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/general1_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/general2_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/general3_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/general4_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/general5_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/procedure2_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/procedure3_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/procedure4_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/procedure5_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/procedure_unknown_returntype_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/return_contradicting_expression_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/type1_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/type2_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/type3_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/type4_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/type5_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/type6_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/type7_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/undeclared_new_argument_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/undeclared_struct_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/undeclared_struct_var_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/variable_scope_shadow_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/wrong_arith_operand_type_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/wrong_log_exp_type_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/wrong_new_arg_type_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/wrong_not_operand_type_fail.cmp"/>
		</java>
        <java classname="Compiler" classpathref="path-run">
          <arg value="src/oblig2patch/src/tests/oblig2/errors/wrong_rel_operand_type_fail.cmp"/>
		</java>
	</target>

</project>
