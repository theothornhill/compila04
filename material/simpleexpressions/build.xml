<!-- Build file (as inspiration) for INF5110/INF9110 Obligatory exercise -->
<project name="INF5110/INF9110 Obligatory exercise" default="menu" basedir=".">
	<target name="menu" >
		<echo>Targets                             </echo>
		<echo>clean                		- Cleans up the project</echo>
		<echo>compile-example-eval 		- Compile Example Eval</echo>
		<echo>run-example-eval     		- Run Example Eval</echo>
		<echo>compile-example-parse  		- Compile Example Parse</echo>
		<echo>run-example-parse      		- Run Example Parse</echo>
	</target>

	<!-- Path definitions -->
	<path id="path-cup">
		<pathelement location="../../lib/java-cup-11a.jar"/>
		<pathelement location="../../lib/JFlex.jar"/>
	</path>

	<path id="path-run">
		<path refid="path-cup"/>
		<pathelement location="build/classes" />
	</path>

	<!-- Task definitions -->
	<taskdef classname="JFlex.anttask.JFlexTask" name="jflex" classpathref="path-cup" />
	<taskdef classname="java_cup.anttask.CUPTask" name="cup" classpathref="path-cup"/>

	<!-- Target definitions -->
	<target name="init">
		<!-- Directories and files that exist. -->
		<property name="dir.base" value="${basedir}"/>
		<property name="dir.build" value="${dir.base}/build"/>
		<property name="dir.src-gen" value="${dir.base}/src-gen"/>
		<property name="dir.src-examples" value="${dir.base}/src-examples"/>
		<property name="dir.src" value="${dir.base}/src"/>
		<!-- Directories and files to be created. -->
		<property name="dir.classes" value="${dir.build}/classes"/>
	</target>

	<target name="clean" depends="init">
		<delete includeemptydirs="true">
			<fileset dir="${dir.build}" includes="**/*"/>
		</delete>
		<delete includeemptydirs="true">
			<fileset dir="${dir.src-gen}" includes="**/*"/>
		</delete>
	</target>

	<target name="mkdir" depends="init">
		<mkdir dir="${dir.classes}"/>
	</target>

        <!-- Generic compile target -->
	<target name="generic-compile" depends="">
		<javac srcdir="${dir.src-gen}" destdir="${dir.classes}" debug="true" includes="${package-name}/*.java" classpathref="path-cup"/>
	</target>
		
	<!-- Generic compile AST-nodes target -->
	<target name="generic-compile-ast" depends="">
		<javac srcdir="${dir.src-examples}" destdir="${dir.classes}" debug="true" includes="**/*.java" classpathref="path-cup"/>
	</target>
        




	<!-- Generate scanner and parser using JFlex and CUP  -->
	<target name="generate" depends="mkdir">
		<jflex file="./grammars/oblig1.lex" destdir="src-gen"/>
		<cup srcfile="./grammars/oblig1.cup" destdir="src-gen" interface="true" />
	</target>

	<!-- Compile Java Files and store in /build/classes directory  -->
	<target name="compile" depends="generate">
		<javac srcdir="${dir.src}" destdir="${dir.classes}" debug="true" includes="**/*.java" classpathref="path-cup" sourcepath="${dir.src-gen}"/>
		<javac srcdir="${dir.src-gen}" destdir="${dir.classes}" debug="true" includes="**/*.java" classpathref="path-cup" sourcepath="${dir.src}" />
	</target>

	<!-- Main target  -->
	<target name="build" depends="compile"/>

	<!-- Run the system  -->
	<target name="run" depends="init">
		<java classname="compiler.Compiler" classpathref="path-run">
			<arg value="compila-code/simple.cmp"/>
			<arg value="compila-ast/simple.ast"/>
		</java>
	</target>





	<!-- Generate scanner and parser for example eval -->
	<target name="generate-example-eval" depends="init, mkdir">
		<jflex file="./grammars/expression-eval.lex" destdir="src-gen"/>
		<cup srcfile="./grammars/expression-eval.cup" destdir="src-gen" interface="true" />
	</target>
	
	<!-- Compile code for example eval -->
	<target name="compile-example-eval" depends="generate-example-eval">
		<antcall target="generic-compile">
			<param name="package-name" value="expression_eval"/>
		</antcall>
	</target>
	
	<!-- Run example eval. -->
	<target name="run-example-eval" depends="init">
		<java classname="expression_eval.parser" classpathref="path-run">
			<arg value="2+3*3;
				1 + 2 * 1 + 1;
				1+2+3+4*2*3*2+1;
				3/3+1;
				1 + 5 / 2 + 9;"/>
		</java>
	</target>




      	<!-- Generate scanner and parser for example par -->
	<target name="generate-example-parse" depends="init, mkdir">
		<jflex file="./grammars/expression-par.lex" destdir="src-gen"/>
		<cup srcfile="./grammars/expression-par.cup" destdir="src-gen" interface="true" />
	</target>
	
	<!-- Compile code for example par -->
	<target name="compile-example-parse" depends="generate-example-parse">
		<antcall target="generic-compile-ast" />
		<antcall target="generic-compile">
			<param name="package-name" value="expression_par"/>
		</antcall>
	</target>
	
	<!-- Run example par -->
	<target name="run-example-parse" depends="init">
		<java classname="expression_par.parser" classpathref="path-run">
			<arg value="./input-examples/test-eval.txt"/>
		</java>
	</target>
</project>
