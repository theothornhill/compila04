program abc
begin
  proc X (x : bool, x : bool ) : a begin end;
  proc X (x : bool) : int begin end;
  proc X ()
  begin
  x := x && x;
  x := x || x;
  x := not x || x;
  x := not x || not x;
  x := not not x || not x;
  x := (not not x) || not x;
  x := x || xy && x;
  x := x || (not xy && x);
  x := x = y;
  x := x = (not x);
  x := x < x ;
  x := x > x > y ;
  x := x + (new x) + x;
  x := (new x) + (new x);
  x := f();
  x := (x.x).x;
  if 4 then begin x:=x+1; end;
  if 4 then begin x:=x+1; end else begin x:=true; end;
  while 5 do begin 
  x := true && false || null;
  x := 1 + 5 + 6;
  x := 1.05;
  end;
  return;
  return x;
  deref (x1) := x2;
  deref (deref(x3)) := deref(deref (x4));
  end;
end;

